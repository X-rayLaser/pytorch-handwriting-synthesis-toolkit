{"version":3,"sources":["worker.js","App.js","reportWebVitals.js","index.js"],"names":["addMethods","methods","module","exports","w","Worker","name","CanvasDrawer","canvas","marginX","marginY","lineWidth","this","wasEos","context","getContext","alpha","clearRect","width","height","beginPath","points","ctx","forEach","p","moveTo","x","y","lineTo","eos","stroke","calculateGeometry","minX","minY","maxX","maxY","Math","min","max","HandwritingScreen","props","canvasRef","React","createRef","defaultLogicalWidth","window","innerWidth","state","text","done","bias","canvasHeight","canvasWidth","geometry","handleClick","bind","handleZoomIn","handleZoomOut","handleCancel","handleChange","handleBiasChange","adjustCanvasSize","worker","setState","addEventListener","current","e","data","event","results","progress","cb","newPoints","newGeo","innerHeight","extraWidth","round","value","updateCanvas","removeEventListener","getAspectRatio","floor","drawer","draw","finish","alert","length","resetGeometry","startWorker","terminate","target","parseFloat","console","error","className","placeholder","onChange","type","step","Button","onClick","disabled","trim","ProgressBar","now","style","overflow","ref","Component","App","textAlign","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e26a65b.chunk.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"startWorker\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"d47adc4009754b8f31be.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import './App.css';\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n//const ort = require('onnxruntime-web');\nimport worker from 'workerize-loader!./worker';// eslint-disable-line import/no-webpack-loader-syntax\n\n\nclass CanvasDrawer {\n  constructor(canvas, marginX, marginY, lineWidth) {\n    this.wasEos = false;\n    this.context = canvas.getContext('2d', { alpha: false});\n    this.marginX = marginX;\n    this.marginY = marginY;\n    this.context.clearRect(0, 0, canvas.width, canvas.height);\n    this.context.lineWidth = lineWidth || 30;\n    this.context.beginPath();\n  }\n\n  draw(points) {\n    const marginX = this.marginX;\n    const marginY = this.marginY;\n    const ctx = this.context;\n\n    points.forEach(p => {\n      if (this.wasEos) {\n        ctx.moveTo(p.x - marginX, p.y - marginY);\n        this.wasEos = false;\n      } else {\n        ctx.lineTo(p.x - marginX, p.y - marginY);\n      }\n\n      if (p.eos == 1) {\n        this.wasEos = true;\n      }\n    });\n  }\n\n  finish() {\n    this.context.stroke();\n  }\n}\n\n\nclass VirtualSurface {\n  //the idea is to scale down all coordinates and then calculate the canvas size which will be smaller\n  //thus performance should go up\n  constructor(scaleFactor) {\n    this.points = [];\n    this.scale = scaleFactor;\n  }\n  \n  push(points) {\n    this.points.push(...points);\n  }\n\n  calculateGeometry() {\n    let points = this.points.map(p => p / this.scale);\n    calculateGeometry(points);\n  }\n}\n\n\nfunction calculateGeometry(points) {\n  let minX = 100000;\n  let minY = 100000;\n  let maxX = -10000;\n  let maxY = -10000;\n\n  points.forEach(p => {\n    minX = Math.min(minX, p.x);\n    minY = Math.min(minY, p.y);\n\n    maxX = Math.max(maxX, p.x);\n    maxY = Math.max(maxY, p.y);\n  });\n\n  let width = maxX - minX;\n  let height = maxY - minY;\n  return {\n    minX,\n    minY,\n    width,\n    height\n  };\n}\n\n\nclass HandwritingScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef= React.createRef();\n\n    let defaultLogicalWidth = window.innerWidth;\n    let defaultLogicalHeight = 1000;\n\n    this.state = {\n      points: [],\n      text: \"\",\n      done: true,\n      bias: 0.5,\n      canvasHeight: window.innerWidth / (defaultLogicalWidth / defaultLogicalHeight),\n      canvasWidth: defaultLogicalWidth,\n      geometry: {\n        x: 200,\n        y: 200,\n        width: defaultLogicalWidth,\n        height: defaultLogicalHeight\n      }\n    };\n\n    this.context = null;\n    this.handleClick = this.handleClick.bind(this);\n    this.handleZoomIn = this.handleZoomIn.bind(this);\n    this.handleZoomOut = this.handleZoomOut.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBiasChange = this.handleBiasChange.bind(this);\n    this.adjustCanvasSize = this.adjustCanvasSize.bind(this);\n    this.worker = null;\n  }\n\n  resetGeometry() {\n    let defaultLogicalWidth = window.innerWidth;\n    let defaultLogicalHeight = 1000;\n\n    this.setState({\n      canvasHeight: window.innerWidth / (defaultLogicalWidth / defaultLogicalHeight),\n      canvasWidth: defaultLogicalWidth,\n      geometry: {\n        x: 200,\n        y: 200,\n        width: defaultLogicalWidth,\n        height: defaultLogicalHeight\n      }\n    });\n  }\n\n  getAspectRatio() {\n    return this.state.geometry.width / this.state.geometry.height;\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.adjustCanvasSize);\n\n    this.context = this.canvasRef.current.getContext('2d');\n    this.worker = worker();\n    \n    this.worker.addEventListener('message', e => {\n      \n      if (e.data.event === \"resultsReady\") {\n        \n        this.setState({\n          points:e.data.results,\n          done: true,\n          progress: 0\n        });\n        \n      }\n\n      if (e.data.event === \"progressChanged\") {\n        this.setState((state, cb) => {\n          let newPoints = [...state.points, ...e.data.results];\n          let newGeo = calculateGeometry(newPoints);\n          const maxWidth = 10000;\n          const maxHeight = 2000;\n          newGeo.width = Math.max(window.innerWidth, state.geometry.width, newGeo.width);\n          newGeo.height = Math.max(window.innerHeight, state.geometry.height, newGeo.height);\n\n          newGeo.width = Math.min(newGeo.width, maxWidth);\n          newGeo.height = Math.min(newGeo.height, maxHeight);\n\n          if (newGeo.width > state.geometry.width) {\n            const extraWidth = Math.round(state.geometry.width / 2);\n            newGeo.width = state.geometry.width + extraWidth;\n          }\n          return {\n            geometry: newGeo,\n            canvasWidth: window.innerWidth,\n            canvasHeight: window.innerWidth / (newGeo.width / newGeo.height),\n            progress: e.data.value,\n            points: newPoints\n          }\n        });\n        \n      }\n    });\n    \n  }\n\n  componentDidUpdate() {\n    this.updateCanvas();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.adjustCanvasSize);\n  }\n\n  adjustCanvasSize() {\n      this.setState({\n        canvasWidth: window.innerWidth,\n        canvasHeight: window.innerWidth / this.getAspectRatio()\n      });\n  }\n\n  updateCanvas() {\n    const canvas = this.canvasRef.current;\n\n    const marginX = this.state.geometry.minX;\n    const marginY = this.state.geometry.minY;\n\n    const minWidth = 5;\n    const lineWidth = Math.floor(this.state.geometry.width / this.state.canvasWidth) + minWidth;\n    const drawer = new CanvasDrawer(canvas, marginX, marginY, lineWidth);\n\n    drawer.draw(this.state.points);\n    drawer.finish();\n  }\n\n  handleClick() {\n    if (this.state.bias < 0) {\n      window.alert(\"Negative bias is not allowed!\");\n      return;\n    }\n\n    if (this.state.text.length < 6) {\n      window.alert(\"Text must contain at least 6 characters. Please, try again.\");\n      return;\n    }\n\n    if (this.state.text.length >= 50) {\n      window.alert(\"Text must contain fewer thatn 50 characters. Please, try again.\");\n      return;\n    }\n    this.resetGeometry();\n    this.setState({points: [], done: false});\n    this.worker.startWorker(this.state.text, this.state.bias);\n  }\n\n  handleZoomIn() {\n    this.setState((state, cb) => ({\n      canvasWidth: state.canvasWidth * 2,\n      canvasHeight: state.canvasHeight * 2\n    }));\n  }\n\n  handleZoomOut() {\n    this.setState((state, cb) => ({\n      canvasWidth: Math.round(state.canvasWidth / 2),\n      canvasHeight: Math.round(state.canvasHeight / 2)\n    }));\n  }\n\n  handleCancel() {\n    if (this.worker) {\n      this.worker.terminate();\n      this.setState({\n        points: [],\n        done: true,\n        progress: 0\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({text: e.target.value});\n  }\n  handleBiasChange(e) {\n    try {\n      let value = parseFloat(e.target.value);\n      if (value >= 0) {\n        this.setState({bias: value});  \n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <textarea placeholder=\"Enter text for a handwriting\" value={this.state.text} onChange={this.handleChange}>\n\n        </textarea>\n        <details>\n          <summary>Settings</summary>\n            <label>Bias</label>\n            <input type=\"number\" value={this.state.bias} min={0} max={100} step={0.1} onChange={this.handleBiasChange} />\n        </details>\n        <div>\n          <Button onClick={this.handleClick} disabled={this.state.text.trim() === \"\" || !this.state.done}>\n            Generate\n          </Button>\n        </div>\n\n        {!this.state.done && <div>Generating a handwriting, please wait...</div>}\n        {!this.state.done && <ProgressBar now={this.state.progress} />}\n        {this.state.done && this.state.points.length > 0 &&\n        <div>\n          <Button onClick={this.handleZoomIn}>Zoom In</Button>\n          <Button onClick={this.handleZoomOut}>Zoom out</Button>\n        </div>\n        }\n        <div style={{ overflow: 'auto'}}>\n          <canvas ref={this.canvasRef} width={this.state.geometry.width} height={this.state.geometry.height} \n                  style={{ width: `${this.state.canvasWidth}px`, height: `${this.state.canvasHeight}px`}} ></canvas>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction App() {\n  return (\n    <div>\n      <h4 style={{ textAlign: 'center'}}>This is a handwriting synthesis demo. It is a Javascript port of \n        <a href=\"https://github.com/X-rayLaser/pytorch-handwriting-synthesis-toolkit\"> pytorch-handwriting-synthesis-toolkit</a> repository.\n      </h4>\n      <HandwritingScreen />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}